@startuml

left to right direction
hide empty members
skinparam linetype ortho
skinparam nodesep 60
skinparam ranksep 60

title OMG Game Development Kit (GDK) - Architecture

' === GDK Core ===
package "GDK_Core" {

    package "gdk" {

        '================== GameModule ==================
        interface GameModule {
            + Scene launchGame(Stage primaryStage)
            + void stopGame()
            + Map<String, Object> handleMessage(Map<String, Object> message)
            + GameMetadata getMetadata()
            + String getGameName()
            + String getGameVersion()
            + String getGameDescription()
            + String getGameAuthor()
        }

        '================== GameMetadata ==================
        abstract class GameMetadata {
            + String getGameName()
            + String getGameVersion()
            + String getGameDescription()
            + String getGameAuthor()
            + boolean supportsSinglePlayer()
            + boolean supportsMultiPlayer()
            + boolean supportsAIOpponent()
            + boolean supportsLocalMultiPlayer()
            + boolean supportsTournament()
            + int getMinPlayers()
            + int getMaxPlayers()
            + String getMinDifficulty()
            + String getMaxDifficulty()
            + int getEstimatedDurationMinutes()
            + List<String> getRequiredResources()
            + Map<String, Object> getSupportedGameModes()
            + Map<String, Object> getRequirements()
            + Map<String, Object> toMap()
        }

        '================== Logging ==================
        class Logging {
            - static DateTimeFormatter TIMESTAMP_FORMAT
            + static void info(String message)
            + static void warning(String message)
            + static void error(String message)
            + static void error(String message, Throwable exception)
            + static void debug(String message)
            - static void log(String level, String message, Throwable exception)
        }

        '================== MessagingBridge ==================
        class MessagingBridge {
            - static CopyOnWriteArrayList<Consumer<Map<String, Object>>> consumers
            - static LobbyReturnCallback lobbyReturnCallback
            + static void setConsumer(Consumer<Map<String, Object>> consumer)
            + static void addConsumer(Consumer<Map<String, Object>> consumer)
            + static void publish(Map<String, Object> message)
            + static void setLobbyReturnCallback(LobbyReturnCallback callback)
            + static void returnToLobby()
        }

        interface LobbyReturnCallback {
            + void returnToLobby()
        }

        '================== Relationships ==================
        GameModule --> GameMetadata : uses
        MessagingBridge *-- LobbyReturnCallback : inner interface

        GameModule -[hidden]-> GameMetadata
        GameMetadata -[hidden]-> Logging
        Logging -[hidden]-> MessagingBridge
    }
}

@enduml

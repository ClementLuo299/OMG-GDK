@startuml

title GDK Class Hierarchy and Inheritance

package "Core Interfaces" {
    interface GameModule {
        +getGameId(): String
        +getGameName(): String
        +launchGame(Stage, int, Object): Scene
        +onGameClose(): void
        +getGameDescription(): String
        +getMinPlayers(): int
        +getMaxPlayers(): int
        +getEstimatedDuration(): int
        +getGameCategory(): String
        +supportsOnlineMultiplayer(): boolean
        +supportsLocalMultiplayer(): boolean
        +supportsSinglePlayer(): boolean
        +getGameIconPath(): String
        +getGameFxmlPath(): String
        +getGameCssPath(): String
    }
    
    interface GameEventHandler {
        +handleGameEvent(GameEvent): void
    }
    

}

package "Core Classes" {
    class GameEvent {
        -eventType: EventType
        -gameId: String
        -message: String
        -timestamp: long
        --
        +GameEvent(EventType, String, String)
        +getEventType(): EventType
        +getGameId(): String
        +getMessage(): String
        +getTimestamp(): long
        --
        enum EventType {
            GAME_STARTED
            GAME_PAUSED
            GAME_RESUMED
            GAME_ENDED
            ERROR_OCCURRED
            STATE_CHANGED
        }
    }
}



package "Module Implementations" {
    class ExampleMain {
        -metadata: GameMetadata
        -gameModule: ExampleGameModule
        --
        +Main()
        +launchGame(...): Scene
        +onGameClose(): void
        +handleJsonData(GameOptions): void
        +processJsonData(Map<String, Object>): void
    }
    
    class ExampleGameMetadata {
        +GAME_ID: String = "example"
        +GAME_NAME: String = "Example Game"
        +GAME_DESCRIPTION: String
        +GAME_CATEGORY: String = "Classic"
        +MIN_PLAYERS: int = 1
        +MAX_PLAYERS: int = 4
        +ESTIMATED_DURATION: int = 10
        --
        +getMinPlayers(): int
        +getMaxPlayers(): int
        +getEstimatedDuration(): int
    }
    
    class ExampleGameModule {
        +launchGame(...): Scene
        +createTestInterface(...): Scene
        +onGameClose(): void
    }
    
    class TicTacToeMain {
        -metadata: GameMetadata
        -gameModule: TicTacToeModule
        --
        +Main()
        +launchGame(...): Scene
        +onGameClose(): void
    }
    
    class TicTacToeGameMetadata {
        +GAME_ID: String = "tictactoe"
        +GAME_NAME: String = "Tic Tac Toe"
        +GAME_DESCRIPTION: String
        +GAME_CATEGORY: String = "Strategy"
        +MIN_PLAYERS: int = 1
        +MAX_PLAYERS: int = 2
        +ESTIMATED_DURATION: int = 5
        --
        +getMinPlayers(): int
        +getMaxPlayers(): int
        +getEstimatedDuration(): int
    }
    
    class TicTacToeModule {
        +launchGame(...): Scene
        +onGameClose(): void
    }
}

package "Launcher" {
    class GDKApplication {
        -primaryStage: Stage
        -lobbyScene: Scene
        -currentGame: GameModule
        +start(Stage): void
        +stop(): void
        +launchGame(GameModule): void
    }
    
    class GDKGameLobbyController {
        -availableGames: ObservableList<GameModule>
        -selectedGame: GameModule
        +initialize(URL, ResourceBundle): void
        +refreshGameList(): void
        +launchGame(): void
    }
    
    class ModuleLoader {
        +discoverModules(String): List<GameModule>
        +loadModule(String): GameModule
        +getModulePath(): String
        +setModulePath(String): void
    }
    
    class ServerSimulatorController {
        -stage: Stage
        -gdkApplication: GDKApplication
        +setStage(Stage): void
        +setGDKApplication(GDKApplication): void
        +sendMessage(String): void
    }
}

' Inheritance relationships
ExampleMain ..|> GameModule : implements
TicTacToeMain ..|> GameModule : implements
ExampleGameMetadata ..|> GameModule : implements
TicTacToeGameMetadata ..|> GameModule : implements

' Composition relationships
ExampleMain --> ExampleGameMetadata : delegates metadata
ExampleMain --> ExampleGameModule : delegates game logic
TicTacToeMain --> TicTacToeGameMetadata : delegates metadata
TicTacToeMain --> TicTacToeModule : delegates game logic

GameEvent --> GameMode : references

@enduml 